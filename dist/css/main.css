@import 'https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css';
@import url("https://fonts.googleapis.com/css?family=Poppins");
* {
  margin: 0;
  padding: 0; }

li {
  list-style: none;
  display: flex; }

a {
  text-decoration: none; }

header {
  background: #f6f6f6; }
  @media screen and (min-width: 768px) {
    header {
      padding: 37px 0 22px 0; } }

.header_container {
  max-width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: fixed;
  background: #f6f6f6;
  z-index: 1; }
  @media screen and (min-width: 768px) {
    .header_container {
      justify-content: space-around;
      position: static; } }
  @media screen and (min-width: 1200px) {
    .header_container {
      max-width: 90%;
      margin: 0 auto;
      display: flex;
      justify-content: space-between; } }
  .header_container .menu {
    position: fixed;
    top: 70px;
    left: -300px;
    transition: all 0.5s; }
    .header_container .menu--active {
      left: 0; }
    @media screen and (min-width: 768px) {
      .header_container .menu {
        position: static;
        display: block; } }
  .header_container .logo {
    max-width: 70px; }
    @media screen and (min-width: 768px) {
      .header_container .logo {
        max-width: initial; } }
  .header_container a {
    color: #000;
    font-size: 16px;
    padding: 27px 10px 30px 9px;
    margin-right: 70px;
    text-decoration: none; }
    .header_container a:hover {
      background: #ffea00; }

.main-menu li {
  display: block;
  font-size: 12px;
  background: #f6f6f6; }

.main-menu a {
  display: block;
  padding: 8px; }

@media screen and (min-width: 768px) {
  .main-menu {
    display: flex;
    padding-top: 27px; } }

@media screen and (min-width: 1200px) {
  .main-menu {
    display: flex; } }

.top-slide {
  background-image: url("../img/slider_bg.png");
  background-size: cover;
  background-repeat: no-repeat;
  padding-top: 123px;
  padding-bottom: 303px; }
  .top-slide .top-container {
    width: 85%;
    margin: 0 auto; }

.specialize-container {
  max-width: 80%;
  margin: 0 auto;
  text-align: center; }

.top-container__text {
  margin-top: 14px; }

.bottom-card {
  background: #414146; }

.specialize-cards {
  display: grid;
  grid-template-columns: auto auto auto auto;
  padding-bottom: 90px; }

.card {
  margin-right: 53px;
  height: 285px;
  width: 250px; }
  .card:last-child {
    margin-right: 0; }

.top-card {
  background: #FFEA00; }

.card_1 img {
  padding: 40px 70px 40px 70px; }

.card_2 img {
  padding: 44px 70px 45px 70px; }

.card_3 img {
  padding: 33px 81px 34px 81px; }

.portfolio-container {
  width: 90%;
  margin: 0 auto;
  text-align: center; }

.brand-slider-container {
  max-width: 90%;
  margin: 0 auto;
  text-align: center; }

.owl-carousel {
  margin-bottom: 120px; }

footer {
  background: #414146;
  padding: 30px 65px;
  color: #fff; }

.imgs img {
  margin-top: 5px; }

.tweets {
  margin-right: 140px; }
  .tweets p {
    margin-top: 30px;
    font-size: 14px; }
    .tweets p img {
      margin-right: 20px; }

.soccont {
  display: flex;
  margin-top: 80px; }
  .soccont h4 {
    margin-top: 3px;
    margin-right: 9px; }
  .soccont img {
    margin-right: 2px; }

.address {
  display: flex;
  margin-top: 40px; }
  .address p {
    font-size: 13px; }
  .address img {
    margin-right: 17px; }

.about-us {
  width: 410px;
  margin-right: 90px; }

.contacts {
  width: 320px; }
  .contacts img {
    width: 30px;
    height: 30px; }
  .contacts .follow-us h4 {
    font-size: 18px;
    margin-top: 40px; }
  .contacts .follow-us p {
    margin-top: 20px;
    font-size: 13px; }
  .contacts .follow-us .follow-input {
    box-direction: none;
    width: 230px;
    background-color: transparent;
    outline: none;
    color: #fff;
    border: none;
    border-bottom: 2px solid #FFEA00; }
  .contacts .follow-us .submit_email {
    background-image: url(../img/email-icon.png);
    width: 30px;
    height: 30px;
    border: none; }
  .contacts .follow-us form {
    display: flex; }

.phn {
  margin-top: 20px;
  display: flex; }
  .phn img {
    margin-right: 17px; }
  .phn p {
    position: relative;
    font-size: 13px; }
    .phn p::after {
      content: "+38 045 845-45-79";
      position: absolute;
      left: 43px; }

.mail {
  margin-top: 30px;
  display: flex; }
  .mail img {
    margin-right: 17px; }
  .mail p {
    font-size: 13px; }

.footer-nav {
  background: #000;
  width: 90%;
  margin: 0 auto; }
  .footer-nav .footer-menu {
    display: flex;
    justify-content: center;
    padding: 28px 0;
    font-size: 16px; }
    .footer-nav .footer-menu a {
      color: #fff;
      text-decoration: none;
      margin-right: 80px; }
    .footer-nav .footer-menu .last {
      margin-right: 0; }

.posts figure {
  width: 300px;
  height: 250px;
  margin: 25px;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center; }

.footer-container {
  width: 90%;
  margin: 0 auto;
  display: flex;
  margin-bottom: 40px; }

.top-slide h2 {
  background: #ffea00;
  display: inline;
  line-height: 1.5;
  font-size: 70px;
  padding: 0 13px; }

.top-slide p {
  background: #414146;
  display: inline;
  line-height: 1.375;
  font-size: 24px;
  color: #fff;
  padding: 0 5px; }

.main-h {
  font-size: 35px;
  padding-top: 90px;
  text-transform: uppercase; }

.main-p {
  font-size: 24px;
  margin-top: 27px;
  margin-bottom: 60px; }

.first-p {
  font-size: 20px;
  color: #fff;
  background: #414146;
  margin-bottom: 0;
  padding: 17px 43px 18px 17px; }

.top-card h3 {
  font-size: 20px; }

.second-p {
  font-size: 13px;
  color: #fff;
  background: #414146;
  margin-bottom: 0;
  padding: 27px 38px 30px 25px; }

.portfolio-container h4 {
  background: #424147;
  padding: 9px 28px;
  display: inline-block;
  color: #ffea00;
  font-size: 18px;
  margin-bottom: 33px; }

.portfolio-container p {
  color: #424146;
  font-size: 16px; }

.brand-slider h4 {
  background: #424147;
  padding: 9px 28px;
  display: inline-block;
  color: #ffea00;
  font-size: 18px;
  margin-bottom: 33px; }

.brand-slider p {
  color: #424146;
  font-size: 16px;
  margin-bottom: 40px; }

footer h4 {
  font-size: 18px; }

footer .about-us p {
  margin: 15px 0 0 0; }

footer span {
  color: #FFEA00; }

#hamburger-btn {
  outline: none;
  border: none;
  cursor: pointer;
  display: block; }
  @media screen and (min-width: 768px) {
    #hamburger-btn {
      display: none; } }

.toggles button {
  border: none;
  color: #424146;
  cursor: pointer;
  font-size: 16px;
  margin: 20px 5px;
  background: #fff; }
  .toggles button::after {
    content: ' / '; }
  .toggles button:last-child:after {
    content: ''; }

.about-us a {
  background: #000;
  border-bottom: 2px solid #FFEA00;
  color: #fff;
  font-size: 15px;
  padding: 13px 18px 14px 17px;
  margin: 30px 0 40px 0;
  display: inline-block; }

/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */
.hamburger {
  padding: 15px 15px;
  display: inline-block;
  cursor: pointer;
  transition-property: opacity, filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible; }
  .hamburger:hover {
    opacity: 0.7; }
  .hamburger.is-active:hover {
    opacity: 0.7; }
  .hamburger.is-active .hamburger-inner,
  .hamburger.is-active .hamburger-inner::before,
  .hamburger.is-active .hamburger-inner::after {
    background-color: #000; }

.hamburger-box {
  width: 25px;
  height: 17px;
  display: inline-block;
  position: relative; }

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: -1.5px; }
  .hamburger-inner, .hamburger-inner::before, .hamburger-inner::after {
    width: 25px;
    height: 3px;
    background-color: #000;
    border-radius: 4px;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease; }
  .hamburger-inner::before, .hamburger-inner::after {
    content: "";
    display: block; }
  .hamburger-inner::before {
    top: -7px; }
  .hamburger-inner::after {
    bottom: -7px; }

/*
   * Spin
   */
.hamburger--spin .hamburger-inner {
  transition-duration: 0.22s;
  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  .hamburger--spin .hamburger-inner::before {
    transition: top 0.1s 0.25s ease-in, opacity 0.1s ease-in; }
  .hamburger--spin .hamburger-inner::after {
    transition: bottom 0.1s 0.25s ease-in, transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19); }

.hamburger--spin.is-active .hamburger-inner {
  transform: rotate(225deg);
  transition-delay: 0.12s;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  .hamburger--spin.is-active .hamburger-inner::before {
    top: 0;
    opacity: 0;
    transition: top 0.1s ease-out, opacity 0.1s 0.12s ease-out; }
  .hamburger--spin.is-active .hamburger-inner::after {
    bottom: 0;
    transform: rotate(-90deg);
    transition: bottom 0.1s ease-out, transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
